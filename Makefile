#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`


# compilers and env vars are defined by callerã€‚
# these are default values, using gcc

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall -fvisibility=hidden -fPIC
ADD_CFLAGS = 
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 
ADD_LDFLAGS = 

INC_LIB_DEBUG = $(INC)
CFLAGS_LIB_DEBUG = $(ADD_CFLAGS) $(CFLAGS) -Og -g
RESINC_LIB_DEBUG = $(RESINC)
RCFLAGS_LIB_DEBUG = $(RCFLAGS)
LIBDIR_LIB_DEBUG = $(LIBDIR)
LIB_LIB_DEBUG = $(LIB)
LDFLAGS_LIB_DEBUG = $(ADD_LDFLAGS) $(LDFLAGS)
OBJDIR_LIB_DEBUG = obj/Lib_Debug
DEP_LIB_DEBUG = 
OUT_LIB_DEBUG = bin/Lib_Debug/libcreq.so

INC_LIB_RELEASE = $(INC)
CFLAGS_LIB_RELEASE = $(ADD_CFLAGS) $(CFLAGS) -O2
RESINC_LIB_RELEASE = $(RESINC)
RCFLAGS_LIB_RELEASE = $(RCFLAGS)
LIBDIR_LIB_RELEASE = $(LIBDIR)
LIB_LIB_RELEASE = $(LIB)
LDFLAGS_LIB_RELEASE = $(ADD_LDFLAGS) $(LDFLAGS) -s
OBJDIR_LIB_RELEASE = obj/Lib_Release
DEP_LIB_RELEASE = 
OUT_LIB_RELEASE = bin/Lib_Release/libcreq.so

INC_LIB_FULLYOPTIMIZED = $(INC)
CFLAGS_LIB_FULLYOPTIMIZED = $(ADD_CFLAGS) $(CFLAGS) -fomit-frame-pointer -flto -O3
RESINC_LIB_FULLYOPTIMIZED = $(RESINC)
RCFLAGS_LIB_FULLYOPTIMIZED = $(RCFLAGS)
LIBDIR_LIB_FULLYOPTIMIZED = $(LIBDIR)
LIB_LIB_FULLYOPTIMIZED = $(LIB)
LDFLAGS_LIB_FULLYOPTIMIZED = $(ADD_LDFLAGS) $(LDFLAGS) -flto -s
OBJDIR_LIB_FULLYOPTIMIZED = obj/Lib_FullyOptimized
DEP_LIB_FULLYOPTIMIZED = 
OUT_LIB_FULLYOPTIMIZED = bin/Lib_FullyOptimized/libcreq.so

INC_TEST_DEBUG = $(INC)
CFLAGS_TEST_DEBUG = $(ADD_CFLAGS) $(CFLAGS) -Og -g
RESINC_TEST_DEBUG = $(RESINC)
RCFLAGS_TEST_DEBUG = $(RCFLAGS)
LIBDIR_TEST_DEBUG = $(LIBDIR)
LIB_TEST_DEBUG = $(LIB)
LDFLAGS_TEST_DEBUG = $(ADD_LDFLAGS) $(LDFLAGS)
OBJDIR_TEST_DEBUG = obj/Test_Debug
DEP_TEST_DEBUG = 
OUT_TEST_DEBUG = bin/Test_Debug/creq_test

OBJ_LIB_DEBUG = $(OBJDIR_LIB_DEBUG)/creq.o

OBJ_LIB_RELEASE = $(OBJDIR_LIB_RELEASE)/creq.o

OBJ_LIB_FULLYOPTIMIZED = $(OBJDIR_LIB_FULLYOPTIMIZED)/creq.o

OBJ_TEST_DEBUG = $(OBJDIR_TEST_DEBUG)/creq.o $(OBJDIR_TEST_DEBUG)/creq_test.o

all: lib_debug lib_release lib_fullyoptimized test_debug

clean: clean_lib_debug clean_lib_release clean_lib_fullyoptimized clean_test_debug

before_lib_debug: 
	test -d bin/Lib_Debug || mkdir -p bin/Lib_Debug
	test -d $(OBJDIR_LIB_DEBUG) || mkdir -p $(OBJDIR_LIB_DEBUG)

after_lib_debug: 

lib_debug: before_lib_debug out_lib_debug after_lib_debug

out_lib_debug: before_lib_debug $(OBJ_LIB_DEBUG) $(DEP_LIB_DEBUG)
	$(LD) -shared $(LIBDIR_LIB_DEBUG) $(OBJ_LIB_DEBUG)  -o $(OUT_LIB_DEBUG) $(LDFLAGS_LIB_DEBUG) $(LIB_LIB_DEBUG)

$(OBJDIR_LIB_DEBUG)/creq.o: creq.c
	$(CC) $(CFLAGS_LIB_DEBUG) $(INC_LIB_DEBUG) -c creq.c -o $(OBJDIR_LIB_DEBUG)/creq.o

clean_lib_debug: 
	rm -f $(OBJ_LIB_DEBUG) $(OUT_LIB_DEBUG)
	rm -rf bin/Lib_Debug
	rm -rf $(OBJDIR_LIB_DEBUG)

before_lib_release: 
	test -d bin/Lib_Release || mkdir -p bin/Lib_Release
	test -d $(OBJDIR_LIB_RELEASE) || mkdir -p $(OBJDIR_LIB_RELEASE)

after_lib_release: 

lib_release: before_lib_release out_lib_release after_lib_release

out_lib_release: before_lib_release $(OBJ_LIB_RELEASE) $(DEP_LIB_RELEASE)
	$(LD) -shared $(LIBDIR_LIB_RELEASE) $(OBJ_LIB_RELEASE)  -o $(OUT_LIB_RELEASE) $(LDFLAGS_LIB_RELEASE) $(LIB_LIB_RELEASE)

$(OBJDIR_LIB_RELEASE)/creq.o: creq.c
	$(CC) $(CFLAGS_LIB_RELEASE) $(INC_LIB_RELEASE) -c creq.c -o $(OBJDIR_LIB_RELEASE)/creq.o

clean_lib_release: 
	rm -f $(OBJ_LIB_RELEASE) $(OUT_LIB_RELEASE)
	rm -rf bin/Lib_Release
	rm -rf $(OBJDIR_LIB_RELEASE)

before_lib_fullyoptimized: 
	test -d bin/Lib_FullyOptimized || mkdir -p bin/Lib_FullyOptimized
	test -d $(OBJDIR_LIB_FULLYOPTIMIZED) || mkdir -p $(OBJDIR_LIB_FULLYOPTIMIZED)

after_lib_fullyoptimized: 

lib_fullyoptimized: before_lib_fullyoptimized out_lib_fullyoptimized after_lib_fullyoptimized

out_lib_fullyoptimized: before_lib_fullyoptimized $(OBJ_LIB_FULLYOPTIMIZED) $(DEP_LIB_FULLYOPTIMIZED)
	$(LD) -shared $(LIBDIR_LIB_FULLYOPTIMIZED) $(OBJ_LIB_FULLYOPTIMIZED)  -o $(OUT_LIB_FULLYOPTIMIZED) $(LDFLAGS_LIB_FULLYOPTIMIZED) $(LIB_LIB_FULLYOPTIMIZED)

$(OBJDIR_LIB_FULLYOPTIMIZED)/creq.o: creq.c
	$(CC) $(CFLAGS_LIB_FULLYOPTIMIZED) $(INC_LIB_FULLYOPTIMIZED) -c creq.c -o $(OBJDIR_LIB_FULLYOPTIMIZED)/creq.o

clean_lib_fullyoptimized: 
	rm -f $(OBJ_LIB_FULLYOPTIMIZED) $(OUT_LIB_FULLYOPTIMIZED)
	rm -rf bin/Lib_FullyOptimized
	rm -rf $(OBJDIR_LIB_FULLYOPTIMIZED)

before_test_debug: 
	test -d bin/Test_Debug || mkdir -p bin/Test_Debug
	test -d $(OBJDIR_TEST_DEBUG) || mkdir -p $(OBJDIR_TEST_DEBUG)

after_test_debug: 

test_debug: before_test_debug out_test_debug after_test_debug

out_test_debug: before_test_debug $(OBJ_TEST_DEBUG) $(DEP_TEST_DEBUG)
	$(LD) $(LIBDIR_TEST_DEBUG) -o $(OUT_TEST_DEBUG) $(OBJ_TEST_DEBUG)  $(LDFLAGS_TEST_DEBUG) $(LIB_TEST_DEBUG)

$(OBJDIR_TEST_DEBUG)/creq.o: creq.c
	$(CC) $(CFLAGS_TEST_DEBUG) $(INC_TEST_DEBUG) -c creq.c -o $(OBJDIR_TEST_DEBUG)/creq.o

$(OBJDIR_TEST_DEBUG)/creq_test.o: creq_test.c
	$(CC) $(CFLAGS_TEST_DEBUG) $(INC_TEST_DEBUG) -c creq_test.c -o $(OBJDIR_TEST_DEBUG)/creq_test.o

clean_test_debug: 
	rm -f $(OBJ_TEST_DEBUG) $(OUT_TEST_DEBUG)
	rm -rf bin/Test_Debug
	rm -rf $(OBJDIR_TEST_DEBUG)

.PHONY: before_lib_debug after_lib_debug clean_lib_debug before_lib_release after_lib_release clean_lib_release before_lib_fullyoptimized after_lib_fullyoptimized clean_lib_fullyoptimized before_test_debug after_test_debug clean_test_debug

